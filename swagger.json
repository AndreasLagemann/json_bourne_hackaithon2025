{
  "components": {
    "schemas": {
      "AlertCondition": {
        "properties": {
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AlertConditionType"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "operator",
          "value",
          "type",
          "createdAt",
          "updatedAt"
        ]
      },
      "AlertConditionType": {
        "properties": {
          "name": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "operators": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "alertType": {
            "$ref": "#/components/schemas/AlertType"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "fieldName",
          "unit",
          "operators",
          "alertType",
          "createdAt",
          "updatedAt"
        ]
      },
      "AlertMethod": {
        "properties": {
          "name": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "AlertProfile": {
        "properties": {
          "name": {
            "type": "string"
          },
          "alertType": {
            "$ref": "#/components/schemas/AlertType"
          },
          "alertConditions": {
            "items": {
              "$ref": "#/components/schemas/AlertCondition"
            },
            "type": "array"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset",
              "definitions": {},
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                }
              }
            },
            "type": "array"
          },
          "triggeredAssets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "zones": {
            "items": {
              "$ref": "#/components/schemas/ZoneProperties"
            },
            "type": "array"
          },
          "assetCategories": {
            "items": {
              "$ref": "#/components/schemas/AssetCategory"
            },
            "type": "array"
          },
          "zoneCategories": {
            "items": {
              "$ref": "#/components/schemas/ZoneCategory"
            },
            "type": "array"
          },
          "alertMethod": {
            "$ref": "#/components/schemas/AlertMethod"
          },
          "active": {
            "type": "boolean"
          },
          "daysOfTheWeek": {
            "type": "string"
          },
          "hoursOfTheDay": {
            "type": "string"
          },
          "deniedHours": {
            "type": "string"
          },
          "emails": {
            "type": "string"
          },
          "mobilePhones": {
            "type": "string"
          },
          "oneTime": {
            "type": "boolean"
          },
          "notificationEnabled": {
            "type": "boolean"
          },
          "critical": {
            "type": "boolean"
          },
          "webhooks": {
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "type": "array"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "assetsWithDynamicZones": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "assetCategoriesWithDynamicZones": {
            "items": {
              "$ref": "#/components/schemas/AssetCategory"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "alertType",
          "alertConditions",
          "assets",
          "triggeredAssets",
          "zones",
          "assetCategories",
          "zoneCategories",
          "alertMethod",
          "active",
          "daysOfTheWeek",
          "hoursOfTheDay",
          "deniedHours",
          "emails",
          "mobilePhones",
          "oneTime",
          "notificationEnabled",
          "critical",
          "webhooks",
          "createdBy",
          "assetsWithDynamicZones",
          "assetCategoriesWithDynamicZones",
          "createdAt",
          "updatedAt"
        ]
      },
      "AlertType": {
        "properties": {
          "name": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "schema",
          "createdAt",
          "updatedAt"
        ]
      },
      "Asset": {
        "properties": {
          "assetIdUpdatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "prismaNo": {
            "type": "string"
          },
          "assetNumber": {
            "type": "integer"
          },
          "imageURL": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "customLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "responsible": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/AssetCategory"
          },
          "subCategory": {
            "$ref": "#/components/schemas/AssetSubCategory"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "deviceEsl": {
            "$ref": "#/components/schemas/Device"
          },
          "resultedFrom": {
            "$ref": "#/components/schemas/Asset"
          },
          "responsibleUser": {
            "$ref": "#/components/schemas/User"
          },
          "floor": {
            "$ref": "#/components/schemas/Floor"
          },
          "zone": {
            "$ref": "#/components/schemas/Zone"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "lastUpdateTs": {
            "type": "number"
          },
          "assetIdUpdatedIn": {
            "$ref": "#/components/schemas/Zone"
          },
          "lastPosition": {
            "$ref": "#/components/schemas/Object"
          },
          "deviceBattery": {
            "type": "number"
          },
          "deviceBatteryState": {
            "type": "string"
          },
          "deviceUpdateFreq": {
            "type": "number"
          },
          "deviceLastOTA": {
            "type": "number"
          },
          "deviceFwVersion": {
            "type": "number"
          },
          "deviceUID": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/Object"
          },
          "deviceStatus": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AssetItem"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "id": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "assetIdUpdatedAt",
          "attachments",
          "name",
          "assetId",
          "serialNumber",
          "prismaNo",
          "assetNumber",
          "imageURL",
          "info",
          "customLocation",
          "description",
          "responsible",
          "category",
          "subCategory",
          "device",
          "deviceEsl",
          "resultedFrom",
          "responsibleUser",
          "floor",
          "zone",
          "location",
          "lastUpdateTs",
          "assetIdUpdatedIn",
          "lastPosition",
          "deviceBattery",
          "deviceBatteryState",
          "deviceUpdateFreq",
          "deviceLastOTA",
          "deviceFwVersion",
          "deviceUID",
          "status",
          "properties",
          "deviceStatus",
          "items",
          "createdAt",
          "updatedAt"
        ],
        "definitions": {}
      },
      "AssetAttachment": {
        "properties": {
          "fileName": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          }
        },
        "type": "object",
        "required": [
          "fileName",
          "originalFileName",
          "asset"
        ]
      },
      "AssetCategory": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "autoIDQueueURL": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "offsetX": {
            "type": "string"
          },
          "offsetY": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "circular": {
            "type": "boolean"
          },
          "propertyNames": {
            "type": "object"
          },
          "whitelistZones": {
            "items": {
              "$ref": "#/components/schemas/ZoneProperties"
            },
            "type": "array"
          },
          "blacklistZones": {
            "items": {
              "$ref": "#/components/schemas/ZoneProperties"
            },
            "type": "array"
          },
          "whitelistZoneCategories": {
            "items": {
              "$ref": "#/components/schemas/ZoneCategory"
            },
            "type": "array"
          },
          "blacklistZoneCategories": {
            "items": {
              "$ref": "#/components/schemas/ZoneCategory"
            },
            "type": "array"
          },
          "deviceApp": {
            "$ref": "#/components/schemas/DeviceApp"
          },
          "assetCustomViewKeys": {
            "type": "object"
          },
          "subCategories": {
            "items": {
              "$ref": "#/components/schemas/AssetSubCategory"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "color",
          "autoIDQueueURL",
          "width",
          "height",
          "offsetX",
          "offsetY",
          "radius",
          "circular",
          "propertyNames",
          "whitelistZones",
          "blacklistZones",
          "whitelistZoneCategories",
          "blacklistZoneCategories",
          "deviceApp",
          "assetCustomViewKeys",
          "subCategories",
          "createdAt",
          "updatedAt"
        ]
      },
      "AssetCategoryInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "radius": {
            "type": "number"
          },
          "circular": {
            "type": "boolean"
          },
          "offsetX": {
            "type": "number"
          },
          "offsetY": {
            "type": "number"
          },
          "subCategories": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "color",
          "width",
          "height",
          "radius",
          "circular",
          "offsetX",
          "offsetY",
          "subCategories"
        ]
      },
      "AssetIdUpdateInput": {
        "properties": {
          "categoryId": {
            "type": "number"
          },
          "assetId": {
            "type": "string"
          },
          "newAssetId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "categoryId",
          "assetId",
          "newAssetId"
        ]
      },
      "AssetInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "assetId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "prismaNo": {
            "type": "string"
          },
          "assetNumber": {
            "type": "integer"
          },
          "imageURL": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "customLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "responsible": {
            "type": "string"
          },
          "categoryId": {
            "type": "number"
          },
          "subCategoryId": {
            "type": "number"
          },
          "resultedFromId": {
            "type": "number"
          },
          "floorId": {
            "type": "number"
          },
          "zoneId": {
            "type": "number"
          },
          "responsibleUserId": {
            "type": "number"
          },
          "deviceId": {
            "type": "number",
            "description": "Device needs to be a locator and can only be associated to one asset. The free locators list can be acquired using /api/devices/free-locators"
          },
          "deviceEslId": {
            "type": "number",
            "description": "DeviceESL needs to be a locator and can only be associated to one asset. The free locators list can be acquired using /api/devices/free-locators"
          },
          "properties": {
            "$ref": "#/components/schemas/Object",
            "type": "object"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AssetItemInput"
            },
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "name",
          "assetId",
          "serialNumber",
          "prismaNo",
          "assetNumber",
          "imageURL",
          "info",
          "customLocation",
          "description",
          "responsible",
          "categoryId",
          "subCategoryId",
          "resultedFromId",
          "floorId",
          "zoneId",
          "responsibleUserId",
          "deviceId",
          "deviceEslId",
          "properties",
          "items"
        ]
      },
      "AssetItem": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "createdAt"
        ]
      },
      "AssetItemInput": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "AssetSubCategory": {
        "properties": {
          "name": {
            "type": "string"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/AssetSubCategory"
            },
            "type": "array"
          },
          "parent": {
            "$ref": "#/components/schemas/AssetSubCategory"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "children",
          "parent",
          "createdAt",
          "updatedAt"
        ]
      },
      "AssetSubCategoryInput": {
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "BaseModel": {
        "properties": {
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "createdAt",
          "updatedAt"
        ]
      },
      "Board": {
        "properties": {
          "name": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "BoardInput": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "Building": {
        "properties": {
          "name": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "floors": {
            "items": {
              "$ref": "#/components/schemas/Floor"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "site",
          "floors",
          "createdAt",
          "updatedAt"
        ]
      },
      "BuildingInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "siteId": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "siteId"
        ]
      },
      "Card": {
        "properties": {
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "archived",
          "active",
          "color",
          "createdAt",
          "updatedAt"
        ]
      },
      "CardHistoryInput": {
        "properties": {
          "cardId": {
            "type": "integer"
          },
          "stepId": {
            "type": "integer"
          },
          "entryTs": {
            "type": "number"
          },
          "exitTs": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "cardId",
          "stepId",
          "entryTs",
          "exitTs"
        ]
      },
      "CardInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "stepId": {
            "type": "integer"
          },
          "assetId": {
            "type": "integer"
          },
          "cardPriorityId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name",
          "archived",
          "active",
          "stepId",
          "assetId",
          "cardPriorityId"
        ]
      },
      "CardPriority": {
        "properties": {
          "priorityIndex": {
            "type": "number"
          },
          "label": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "priorityIndex",
          "label",
          "createdAt",
          "updatedAt"
        ]
      },
      "CardPriorityInput": {
        "properties": {
          "priorityIndex": {
            "type": "integer"
          },
          "label": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "priorityIndex",
          "label"
        ]
      },
      "Carrier": {
        "properties": {
          "carrierId": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "avarageDeliveryTime": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "carrierId",
          "carrierName",
          "avarageDeliveryTime",
          "createdAt",
          "updatedAt"
        ]
      },
      "CustomPropertyInput": {
        "properties": {
          "oldKey": {
            "type": "string"
          },
          "newKey": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "oldKey",
          "newKey",
          "key",
          "description"
        ]
      },
      "Device": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  ""
                ]
              },
              {
                "not": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "array"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "nullable": true
              }
            ],
            "$ref": "#/components/schemas/DeviceType"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/DeviceProperty"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "uid": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "asset",
          "properties",
          "createdAt",
          "updatedAt",
          "uid"
        ],
        "definitions": {}
      },
      "DeviceApp": {
        "properties": {
          "name": {
            "type": "string"
          },
          "assetCategory": {
            "$ref": "#/components/schemas/AssetCategory"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "assetCategory",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeviceAppInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "assetCategoryId": {
            "type": "number"
          },
          "appId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "assetCategoryId",
          "appId"
        ]
      },
      "DeviceFamily": {
        "properties": {
          "name": {
            "type": "string"
          },
          "deviceTypes": {
            "items": {
              "$ref": "#/components/schemas/DeviceType"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "deviceTypes",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeviceInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "typeId": {
            "type": "number"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/DevicePropertyInput"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "typeId",
          "properties"
        ]
      },
      "DeviceProperty": {
        "properties": {
          "propId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "propType": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "arrayValue": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "translatable": {
            "type": "boolean"
          },
          "order": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "propId",
          "name",
          "value",
          "propType",
          "visible",
          "arrayValue",
          "hidden",
          "translatable",
          "order"
        ]
      },
      "DevicePropertyInput": {
        "properties": {
          "propId": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "propId"
        ]
      },
      "DevicePropertyKey": {
        "properties": {
          "propId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "propType": {
            "type": "string"
          },
          "arrayValue": {
            "type": "boolean"
          },
          "options": {
            "$ref": "#/components/schemas/Object",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                }
              }
            }
          },
          "rules": {
            "$ref": "#/components/schemas/Object",
            "type": "object",
            "properties": {
              "{option_1_name}": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              "{option_n_name}": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          },
          "required": {
            "type": "boolean"
          },
          "immutable": {
            "type": "boolean"
          },
          "multiEdit": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "important": {
            "type": "boolean"
          },
          "readonly": {
            "type": "boolean"
          },
          "csvImport": {
            "type": "boolean"
          },
          "translatable": {
            "type": "boolean"
          },
          "order": {
            "type": "number"
          },
          "default": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "propId",
          "name",
          "propType",
          "arrayValue",
          "options",
          "rules",
          "required",
          "immutable",
          "multiEdit",
          "visible",
          "hidden",
          "important",
          "readonly",
          "csvImport",
          "translatable",
          "order",
          "default"
        ]
      },
      "DevicePropertyValue": {
        "properties": {
          "devicePropertyKey": {
            "$ref": "#/components/schemas/DevicePropertyKey"
          },
          "device": {
            "$ref": "#/components/schemas/Device"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "devicePropertyKey",
          "device",
          "createdAt",
          "updatedAt"
        ]
      },
      "DeviceType": {
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "outdoor": {
            "type": "boolean"
          },
          "customMarkerBase64": {
            "type": "string"
          },
          "customMarkerSize": {
            "type": "number"
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/DevicePropertyKey"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "outdoor",
          "customMarkerBase64",
          "customMarkerSize",
          "properties"
        ]
      },
      "DynamicZone": {
        "properties": {
          "name": {
            "type": "string"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "assetCategories": {
            "items": {
              "$ref": "#/components/schemas/AssetCategory"
            },
            "type": "array"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "offsetX": {
            "type": "string"
          },
          "offsetY": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "circular": {
            "type": "boolean"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "assets",
          "assetCategories",
          "width",
          "height",
          "offsetX",
          "offsetY",
          "radius",
          "circular",
          "createdAt",
          "updatedAt"
        ]
      },
      "DynamicZoneInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "offsetX": {
            "type": "number"
          },
          "offsetY": {
            "type": "number"
          },
          "radius": {
            "type": "number"
          },
          "circular": {
            "type": "boolean"
          },
          "assetIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "assetCategoryIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "width",
          "height",
          "offsetX",
          "offsetY",
          "radius",
          "circular",
          "assetIds",
          "assetCategoryIds"
        ]
      },
      "Event": {
        "properties": {
          "message": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "assetId": {
            "type": "integer"
          },
          "deviceId": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "timestamp": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "confirmationDescription": {
            "type": "string"
          },
          "notificationEnabled": {
            "type": "boolean"
          },
          "critical": {
            "type": "boolean"
          },
          "resolvedByEmail": {
            "type": "string"
          },
          "resolvedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "message",
          "userEmail",
          "assetId",
          "deviceId",
          "source",
          "type",
          "data",
          "timestamp",
          "status",
          "confirmationDescription",
          "notificationEnabled",
          "critical",
          "resolvedByEmail",
          "resolvedAt",
          "createdAt",
          "updatedAt"
        ]
      },
      "EventDeleteSettings": {
        "properties": {
          "source": {
            "type": "string"
          },
          "maxAllowedEvents": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "source",
          "maxAllowedEvents",
          "active",
          "createdAt",
          "updatedAt"
        ]
      },
      "EventDeleteSettingsInput": {
        "properties": {
          "source": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "source"
        ]
      },
      "Floor": {
        "properties": {
          "name": {
            "type": "string"
          },
          "areaCode": {
            "type": "number"
          },
          "wpFloorId": {
            "type": "string"
          },
          "wpBuildingId": {
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "overlayPlan": {
            "$ref": "#/components/schemas/OverlayPlan"
          },
          "assetMapZoomLevel": {
            "type": "number"
          },
          "sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "quuppaFloorId": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "areaCode",
          "wpFloorId",
          "wpBuildingId",
          "plan",
          "overlayPlan",
          "assetMapZoomLevel",
          "sections",
          "quuppaFloorId",
          "createdAt",
          "updatedAt"
        ]
      },
      "FloorInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "areaCode": {
            "type": "integer"
          },
          "buildingId": {
            "type": "integer"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanInput"
          },
          "overlayPlan": {
            "$ref": "#/components/schemas/OverlayPlanInput"
          },
          "wpFloorId": {
            "type": "string"
          },
          "wpBuildingId": {
            "type": "string"
          },
          "wirepasFloor": {
            "$ref": "#/components/schemas/WirepasFloorInput"
          },
          "assetMapZoomLevel": {
            "type": "integer"
          },
          "sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "quuppaFloorId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "areaCode",
          "buildingId",
          "plan",
          "overlayPlan",
          "wpFloorId",
          "wpBuildingId",
          "wirepasFloor",
          "assetMapZoomLevel",
          "sections",
          "quuppaFloorId"
        ]
      },
      "Flow": {
        "properties": {
          "name": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "flowId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "port",
          "status",
          "flowId",
          "url",
          "createdBy",
          "createdAt",
          "updatedAt"
        ]
      },
      "GeoJSON": {
        "properties": {
          "type": {
            "type": "string"
          },
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/Object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ]
      },
      "GeoJSONInput": {
        "properties": {
          "type": {
            "type": "string"
          },
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/Object",
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ]
      },
      "LeFilter": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "order",
          "active",
          "createdAt",
          "updatedAt"
        ]
      },
      "LeFilterCategory": {
        "properties": {
          "floor": {
            "type": "string"
          },
          "floorId": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "beaconTopic": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "floor",
          "floorId",
          "topic",
          "beaconTopic",
          "active",
          "createdAt",
          "updatedAt"
        ]
      },
      "LeFilterCategoryInput": {
        "properties": {
          "floor": {
            "type": "string"
          },
          "floorId": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "beaconTopic": {
            "type": "string"
          },
          "targetFloorId": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "floor",
          "floorId",
          "topic",
          "beaconTopic",
          "targetFloorId",
          "active"
        ]
      },
      "LeFilterInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "leFilterCategoryId": {
            "type": "number"
          },
          "order": {
            "type": "number"
          },
          "active": {
            "type": "boolean"
          },
          "configSchema": {
            "$ref": "#/components/schemas/Object"
          },
          "config": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "leFilterCategoryId",
          "order",
          "active",
          "configSchema",
          "config"
        ]
      },
      "Location": {
        "properties": {
          "zoneId": {
            "type": "number"
          },
          "zoneEntryTs": {
            "type": "number"
          },
          "locationString": {
            "type": "string"
          },
          "floorId": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "zoneId",
          "zoneEntryTs",
          "locationString",
          "floorId"
        ]
      },
      "Marker": {
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "color",
          "createdAt",
          "updatedAt"
        ]
      },
      "MarkerCategory": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "mapOrder": {
            "type": "number"
          },
          "maxSize": {
            "type": "number"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "color",
          "mapOrder",
          "maxSize",
          "createdAt",
          "updatedAt"
        ]
      },
      "MarkerCategoryInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "color"
        ]
      },
      "MarkerInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Object",
            "type": "object"
          },
          "markerCategoryId": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "name",
          "color",
          "location",
          "markerCategoryId"
        ]
      },
      "Object": {
        "type": "object",
        "example": {
          "property1Key": "property1Value",
          "propertyNKey": "propertyNValue"
        }
      },
      "OverlayPlan": {
        "properties": {
          "orientation": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "pxBounds": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "mmBounds": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "imageWidth": {
            "type": "number"
          },
          "imageHeight": {
            "type": "number"
          },
          "imageAngle": {
            "type": "number"
          },
          "file": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "orientation",
          "pxBounds",
          "mmBounds",
          "imageWidth",
          "imageHeight",
          "imageAngle",
          "file",
          "originalFileName",
          "createdAt",
          "updatedAt"
        ]
      },
      "OverlayPlanInput": {
        "properties": {
          "offsetX": {
            "type": "number"
          },
          "offsetY": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "scaleX": {
            "type": "number"
          },
          "scaleY": {
            "type": "number"
          },
          "orientation": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "pxBounds": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "mmBounds": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "imageHeight": {
            "type": "number"
          },
          "imageWidth": {
            "type": "number"
          },
          "verticalDatum": {
            "type": "number"
          },
          "imageAngle": {
            "type": "number"
          },
          "file": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "offsetX",
          "offsetY",
          "width",
          "height",
          "scaleX",
          "scaleY",
          "orientation",
          "pxBounds",
          "mmBounds",
          "imageHeight",
          "imageWidth",
          "verticalDatum",
          "imageAngle",
          "file"
        ]
      },
      "PaginationWrapper": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array"
          },
          "skip": {
            "type": "number"
          },
          "take": {
            "type": "number"
          },
          "totalCount": {
            "type": "number"
          }
        }
      },
      "Place": {
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "$ref": "#/components/schemas/GeoJSON",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "location",
          "createdAt",
          "updatedAt"
        ]
      },
      "PlaceInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/GeoJSONInput"
          }
        },
        "type": "object",
        "required": [
          "name",
          "location"
        ]
      },
      "Plan": {
        "properties": {
          "pxPointA": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "pxPointB": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "mmPointA": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "mmPointB": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "pxBounds": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "mmBounds": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "center": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "orientation": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "mmDistance": {
            "type": "number"
          },
          "zoom": {
            "type": "number"
          },
          "imageWidth": {
            "type": "number"
          },
          "imageHeight": {
            "type": "number"
          },
          "verticalDatum": {
            "type": "number"
          },
          "scaled": {
            "type": "boolean"
          },
          "imageAngle": {
            "type": "number"
          },
          "file": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "pxPointA",
          "pxPointB",
          "mmPointA",
          "mmPointB",
          "pxBounds",
          "mmBounds",
          "center",
          "orientation",
          "mmDistance",
          "zoom",
          "imageWidth",
          "imageHeight",
          "verticalDatum",
          "scaled",
          "imageAngle",
          "file",
          "originalFileName",
          "createdAt",
          "updatedAt"
        ]
      },
      "PlanInput": {
        "properties": {
          "pxPointA": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "pxPointB": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "mmPointA": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "mmPointB": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "pxBounds": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "mmBounds": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "orientation": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "center": {
            "$ref": "#/components/schemas/GeoJSONInput"
          },
          "mmDistance": {
            "type": "number"
          },
          "zoom": {
            "type": "number"
          },
          "imageHeight": {
            "type": "number"
          },
          "imageWidth": {
            "type": "number"
          },
          "verticalDatum": {
            "type": "number"
          },
          "imageAngle": {
            "type": "number"
          },
          "file": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "pxPointA",
          "pxPointB",
          "mmPointA",
          "mmPointB",
          "pxBounds",
          "mmBounds",
          "orientation",
          "center",
          "mmDistance",
          "zoom",
          "imageHeight",
          "imageWidth",
          "verticalDatum",
          "imageAngle",
          "file"
        ]
      },
      "Profile": {
        "properties": {
          "name": {
            "type": "string"
          },
          "deviceType": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "settings_legacy": {
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "deviceType",
          "settings_legacy",
          "createdAt",
          "updatedAt"
        ]
      },
      "ProfileInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "deviceTypeId": {
            "type": "integer"
          },
          "settings": {
            "$ref": "#/components/schemas/Object"
          },
          "settingsSchema": {
            "$ref": "#/components/schemas/Object"
          }
        },
        "type": "object",
        "required": [
          "name",
          "deviceTypeId",
          "settings",
          "settingsSchema"
        ]
      },
      "Report": {
        "properties": {
          "selectors": {
            "items": {
              "$ref": "#/components/schemas/Selector"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "selectors",
          "createdAt",
          "updatedAt"
        ]
      },
      "Right": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "groupName": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "active",
          "groupName",
          "createdAt",
          "updatedAt"
        ]
      },
      "Role": {
        "properties": {
          "name": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "rights": {
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "admin",
          "rights",
          "createdAt",
          "updatedAt"
        ]
      },
      "RoleInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "rightIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "admin",
          "rightIds"
        ]
      },
      "ScannerAppSettings": {
        "properties": {
          "assetScanMode": {
            "type": "string"
          },
          "assetScanParser": {
            "type": "string"
          },
          "deviceScanParser": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "assetScanMode",
          "assetScanParser",
          "deviceScanParser",
          "createdAt",
          "updatedAt"
        ]
      },
      "ScannerAppSettingsInput": {
        "properties": {
          "assetScanMode": {
            "type": "string"
          },
          "assetScanParser": {
            "type": "string"
          },
          "deviceScanParser": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "assetScanMode",
          "assetScanParser",
          "deviceScanParser"
        ]
      },
      "Selector": {
        "properties": {
          "name": {
            "type": "string"
          },
          "selectorKey": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "selectorKey",
          "value",
          "operation",
          "createdAt",
          "updatedAt"
        ]
      },
      "Setting": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "isNumber": {
            "type": "boolean"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value",
          "isNumber",
          "profile"
        ]
      },
      "Shipment": {
        "properties": {
          "taskId": {
            "type": "string"
          },
          "reportEndTs": {
            "type": "integer"
          },
          "shipmentId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hazardousGood": {
            "type": "boolean"
          },
          "express": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "plannedTimeOfArrival": {
            "type": "integer"
          },
          "plannedTimeOfDeparture": {
            "type": "integer"
          },
          "actualTimeOfArrival": {
            "type": "integer"
          },
          "estimatedTimeOfArrival": {
            "type": "integer"
          },
          "actualTimeOfDeparture": {
            "type": "integer"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "attachments": {
            "items": {
              "$ref": "#/components/schemas/Array"
            },
            "type": "array"
          },
          "duration": {
            "type": "number"
          },
          "customColumns": {
            "type": "string"
          },
          "waypoints": {
            "items": {
              "$ref": "#/components/schemas/Waypoint"
            },
            "type": "array"
          },
          "alertProfiles": {
            "items": {
              "$ref": "#/components/schemas/ShipmentAlertProfile"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "taskId",
          "reportEndTs",
          "shipmentId",
          "description",
          "hazardousGood",
          "express",
          "name",
          "plannedTimeOfArrival",
          "plannedTimeOfDeparture",
          "actualTimeOfArrival",
          "estimatedTimeOfArrival",
          "actualTimeOfDeparture",
          "assets",
          "attachments",
          "duration",
          "customColumns",
          "waypoints",
          "alertProfiles",
          "createdAt",
          "updatedAt"
        ]
      },
      "ShipmentAlertProfile": {
        "properties": {
          "daysOfTheWeek": {
            "type": "string"
          },
          "hoursOfTheDay": {
            "type": "string"
          },
          "deniedHours": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "daysOfTheWeek",
          "hoursOfTheDay",
          "deniedHours"
        ]
      },
      "ShipmentAttachment": {
        "properties": {
          "fileName": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment"
          }
        },
        "type": "object",
        "required": [
          "fileName",
          "originalFileName",
          "shipment"
        ]
      },
      "ShipmentStatus": {
        "properties": {
          "status": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "ShipmentTemplate": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hazardousGood": {
            "type": "boolean"
          },
          "express": {
            "type": "boolean"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "type": "array"
          },
          "customColumns": {
            "type": "string"
          },
          "waypoints": {
            "items": {
              "$ref": "#/components/schemas/Waypoint"
            },
            "type": "array"
          },
          "alertProfiles": {
            "items": {
              "$ref": "#/components/schemas/ShipmentTemplateAlertProfile"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "hazardousGood",
          "express",
          "assets",
          "customColumns",
          "waypoints",
          "alertProfiles",
          "createdAt",
          "updatedAt"
        ]
      },
      "ShipmentTemplateAlertProfile": {
        "properties": {
          "daysOfTheWeek": {
            "type": "string"
          },
          "hoursOfTheDay": {
            "type": "string"
          },
          "deniedHours": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "daysOfTheWeek",
          "hoursOfTheDay",
          "deniedHours"
        ]
      },
      "Site": {
        "properties": {
          "name": {
            "type": "string"
          },
          "buildings": {
            "items": {
              "$ref": "#/components/schemas/Building"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "buildings",
          "createdAt",
          "updatedAt"
        ]
      },
      "SiteInput": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "Step": {
        "properties": {
          "name": {
            "type": "string"
          },
          "expectedDuration": {
            "type": "number"
          },
          "orderIndex": {
            "type": "number"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "expectedDuration",
          "orderIndex",
          "createdAt",
          "updatedAt"
        ]
      },
      "StepInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "expectedDuration": {
            "type": "integer"
          },
          "orderIndex": {
            "type": "integer"
          },
          "boardId": {
            "type": "integer"
          },
          "zonePropertiesId": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "name",
          "expectedDuration",
          "orderIndex",
          "boardId",
          "zonePropertiesId"
        ]
      },
      "Team": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "TeamInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "floorIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "assetCategoryIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "zoneCategoryIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "alertProfileIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "userIds": {
            "items": {
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "floorIds",
          "assetCategoryIds",
          "zoneCategoryIds",
          "alertProfileIds",
          "userIds"
        ]
      },
      "User": {
        "properties": {
          "firstName": {
            "pattern": "^[a-zA-Z]+$",
            "type": "string"
          },
          "lastName": {
            "pattern": "^[a-zA-Z]+$",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "apikey": {
            "type": "string"
          },
          "system": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "lastLoginAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "passwordChangeAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "disabledUntilTs": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "role": {
            "$ref": "#/components/schemas/Role",
            "id": "integer"
          },
          "settings": {
            "$ref": "#/components/schemas/UserSettings"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "role.id",
          "lastName",
          "email",
          "apikey",
          "system",
          "username",
          "department",
          "lastLoginAt",
          "passwordChangeAt",
          "disabledUntilTs",
          "role",
          "settings",
          "createdAt",
          "updatedAt"
        ],
        "definitions": {}
      },
      "UserDefaultPosition": {
        "properties": {
          "position": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "position",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserDefaultPositionInput": {
        "properties": {
          "position": {
            "$ref": "#/components/schemas/GeoJSONInput"
          }
        },
        "type": "object",
        "required": [
          "position"
        ]
      },
      "UserInput": {
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "disabledUntilTs": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "roleId": {
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/UserSettingsInput"
          }
        },
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "mobilePhone",
          "username",
          "department",
          "password",
          "disabledUntilTs",
          "roleId",
          "settings"
        ]
      },
      "UserSettings": {
        "properties": {
          "mainFloorId": {
            "type": "number"
          },
          "tagLabel": {
            "type": "number"
          },
          "zoneLabel": {
            "type": "number"
          },
          "dotSize": {
            "type": "number"
          },
          "places": {
            "items": {
              "$ref": "#/components/schemas/Place"
            },
            "type": "array"
          },
          "defaultPositions": {
            "items": {
              "$ref": "#/components/schemas/UserDefaultPosition"
            },
            "type": "array"
          },
          "updateFrequency": {
            "type": "number"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "mainFloorId",
          "tagLabel",
          "zoneLabel",
          "dotSize",
          "places",
          "defaultPositions",
          "updateFrequency",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserSettingsInput": {
        "properties": {
          "id": {
            "type": "number"
          },
          "mainFloorId": {
            "type": "number"
          },
          "tagLabel": {
            "type": "number"
          },
          "zoneLabel": {
            "type": "number"
          },
          "dotSize": {
            "type": "number"
          },
          "updateFrequency": {
            "type": "number"
          },
          "places": {
            "items": {
              "$ref": "#/components/schemas/PlaceInput"
            },
            "type": "array"
          },
          "defaultPositions": {
            "items": {
              "$ref": "#/components/schemas/UserDefaultPositionInput"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "mainFloorId",
          "tagLabel",
          "zoneLabel",
          "dotSize",
          "updateFrequency",
          "places",
          "defaultPositions"
        ]
      },
      "Waypoint": {
        "properties": {
          "plannedTimeOfArrival": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "plannedTimeOfDeparture": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "actualTimeOfArrival": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "actualTimeOfDeparture": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "lengthOfStay": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          },
          "order": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "visited": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fromIataCode": {
            "type": "string"
          },
          "toIataCode": {
            "type": "string"
          },
          "vehicleId": {
            "type": "string"
          },
          "flightMode": {
            "type": "boolean"
          },
          "adaptiveUpdateRate": {
            "type": "boolean"
          },
          "modalityWhenLeaving": {
            "type": "string"
          },
          "shipment": {
            "$ref": "#/components/schemas/Shipment"
          },
          "shipmentTemplate": {
            "$ref": "#/components/schemas/ShipmentTemplate"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "plannedTimeOfArrival",
          "plannedTimeOfDeparture",
          "actualTimeOfArrival",
          "actualTimeOfDeparture",
          "lengthOfStay",
          "latitude",
          "order",
          "longitude",
          "visited",
          "address",
          "description",
          "fromIataCode",
          "toIataCode",
          "vehicleId",
          "flightMode",
          "adaptiveUpdateRate",
          "modalityWhenLeaving",
          "shipment",
          "shipmentTemplate",
          "createdAt",
          "updatedAt"
        ]
      },
      "Webhook": {
        "properties": {
          "url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "headers": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "odata": {
            "type": "string"
          },
          "alertType": {
            "$ref": "#/components/schemas/AlertType"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "url",
          "name",
          "description",
          "method",
          "headers",
          "payload",
          "odata",
          "alertType",
          "createdAt",
          "updatedAt"
        ]
      },
      "WebhookAuth": {
        "properties": {
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "headerKey": {
            "type": "string"
          },
          "headerValue": {
            "type": "string"
          },
          "xCsrfTokenUrl": {
            "type": "string"
          },
          "tokenHeaderKey": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "username",
          "password",
          "headerKey",
          "headerValue",
          "xCsrfTokenUrl",
          "tokenHeaderKey",
          "createdAt",
          "updatedAt"
        ]
      },
      "WirepasFloor": {
        "properties": {
          "wpFloorId": {
            "type": "string"
          },
          "wpBuildingId": {
            "type": "string"
          },
          "pixelsPerMeter": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "wpFloorId",
          "wpBuildingId",
          "pixelsPerMeter"
        ]
      },
      "WirepasFloorInput": {
        "properties": {
          "wpFloorId": {
            "type": "string"
          },
          "wpBuildingId": {
            "type": "string"
          },
          "pixelsPerMeter": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "wpFloorId",
          "wpBuildingId",
          "pixelsPerMeter"
        ]
      },
      "Zone": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ZoneProperties"
          },
          "zoneProfile": {
            "$ref": "#/components/schemas/ZoneProfile"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "properties",
          "zoneProfile",
          "geometry",
          "createdAt",
          "updatedAt"
        ]
      },
      "ZoneCategory": {
        "properties": {
          "name": {
            "type": "string"
          },
          "activeColor": {
            "type": "string"
          },
          "inactiveColor": {
            "type": "string"
          },
          "isObstacle": {
            "type": "boolean"
          },
          "isSection": {
            "type": "string"
          },
          "bypassWhitelisting": {
            "type": "string"
          },
          "propertyNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "activeColor",
          "inactiveColor",
          "isObstacle",
          "isSection",
          "bypassWhitelisting",
          "propertyNames",
          "createdAt",
          "updatedAt"
        ]
      },
      "ZoneCategoryInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "activeColor": {
            "type": "string"
          },
          "inactiveColor": {
            "type": "string"
          },
          "isObstacle": {
            "type": "boolean"
          },
          "isSection": {
            "type": "boolean"
          },
          "whitelist": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "blacklist": {
            "items": {
              "type": "number"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "activeColor",
          "inactiveColor",
          "isObstacle",
          "isSection",
          "whitelist",
          "blacklist"
        ]
      },
      "ZoneInput": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ZonePropertiesInput"
          },
          "zoneProfileId": {
            "type": "number"
          },
          "geometry": {
            "$ref": "#/components/schemas/GeoJSONInput"
          }
        },
        "type": "object",
        "required": [
          "properties",
          "zoneProfileId",
          "geometry"
        ]
      },
      "ZoneProfile": {
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "properties": {
            "items": {
              "$ref": "#/components/schemas/ZoneProfileProperty"
            },
            "type": "array"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "properties",
          "createdAt",
          "updatedAt"
        ]
      },
      "ZoneProfileInput": {
        "properties": {
          "name": {
            "type": "string"
          },
          "properties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "properties"
        ]
      },
      "ZoneProfileProperty": {
        "properties": {
          "key": {
            "type": "string"
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "key",
          "createdAt",
          "updatedAt"
        ]
      },
      "ZoneProperties": {
        "properties": {
          "activeColor": {
            "type": "string"
          },
          "inactiveColor": {
            "type": "string"
          },
          "customProperties": {
            "$ref": "#/components/schemas/Object",
            "type": "object"
          },
          "systemZone": {
            "type": "boolean"
          },
          "obstacle": {
            "type": "boolean"
          },
          "yard": {
            "type": "string"
          },
          "path": {
            "$ref": "#/components/schemas/GeoJSON",
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "createdAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "format": "date-time",
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "activeColor",
          "inactiveColor",
          "customProperties",
          "systemZone",
          "obstacle",
          "yard",
          "path",
          "createdAt",
          "updatedAt"
        ]
      },
      "ZonePropertiesInput": {
        "properties": {
          "id": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "floorId": {
            "type": "number"
          },
          "beaconDeviceId": {
            "type": "number"
          },
          "label": {
            "type": "string"
          },
          "inactiveColor": {
            "type": "string"
          },
          "activeColor": {
            "type": "string"
          },
          "whitelist": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "blacklist": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "deviceList": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "zoomLevel": {
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "systemZone": {
            "type": "boolean"
          },
          "obstacle": {
            "type": "boolean"
          },
          "customProperties": {
            "$ref": "#/components/schemas/Object",
            "type": "object"
          },
          "path": {
            "$ref": "#/components/schemas/GeoJSONInput"
          }
        },
        "type": "object",
        "required": [
          "id",
          "categoryId",
          "floorId",
          "beaconDeviceId",
          "label",
          "inactiveColor",
          "activeColor",
          "whitelist",
          "blacklist",
          "deviceList",
          "zoomLevel",
          "systemZone",
          "obstacle",
          "customProperties",
          "path"
        ]
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "info": {
    "title": "Intranav API",
    "version": "1.19.2",
    "description": "Intranav Platform REST API.\n> Authorization : Api-Key j14q5MPpftGBqS6vcTiPb1wIEDPImRBJ\n"
  },
  "openapi": "3.0.0",
  "paths": {
    "/asset-categories": {
      "get": {
        "operationId": "AssetCategoryController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AssetCategory"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Asset Category"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "operationId": "AssetCategoryController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCategoryInput"
              }
            }
          },
          "description": "AssetCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Asset Category"
        ]
      }
    },
    "/asset-categories/{id}": {
      "get": {
        "operationId": "AssetCategoryController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Asset Category"
        ]
      },
      "put": {
        "operationId": "AssetCategoryController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetCategoryInput"
              }
            }
          },
          "description": "AssetCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Asset Category"
        ]
      },
      "delete": {
        "operationId": "AssetCategoryController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Asset Category"
        ]
      }
    },
    "/assets": {
      "get": {
        "operationId": "AssetController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/Asset"
                      },
                      "type": "array"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationWrapper"
                    }
                  ]
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "take",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "paginatedResponse",
            "required": false,
            "schema": {
              "type": "string"
            },
            "enum": [
              "yes",
              "no"
            ],
            "default": "no"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "deviceTypeId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "operationId": "AssetController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetInput"
              }
            }
          },
          "description": "AssetInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/lite": {
      "get": {
        "operationId": "AssetController.findLite",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find lite",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/ids": {
      "get": {
        "operationId": "AssetController.getIds",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get ids",
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "take",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ]
      }
    },
    "/assets/byIdsInPayload": {
      "post": {
        "operationId": "AssetController.byIds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "description": "",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "By ids",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/uid/{uid}": {
      "get": {
        "operationId": "AssetController.findByUwbMac",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find by uwb mac",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}": {
      "get": {
        "operationId": "AssetController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Asset"
        ]
      },
      "put": {
        "operationId": "AssetController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetInput"
              }
            }
          },
          "description": "AssetInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Asset"
        ]
      },
      "delete": {
        "operationId": "AssetController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/assetId/{assetId}": {
      "get": {
        "operationId": "AssetController.oneByAssetId",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One by asset id",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/serialNumber/{serialNumber}": {
      "get": {
        "operationId": "AssetController.oneBySerialNumber",
        "parameters": [
          {
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One by serial number",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}/deviceProp/{propId}": {
      "get": {
        "operationId": "AssetController.getDevicePropValue",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          },
          {
            "in": "path",
            "name": "propId",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get device prop value",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}/current-zone": {
      "get": {
        "operationId": "AssetController.getCurrentZone",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get current zone",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/location": {
      "get": {
        "operationId": "AssetController.getLocation",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get location",
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "viewerPosLat",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "viewerPosLng",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "width",
            "required": false,
            "default": 1024,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "height",
            "required": false,
            "default": 768,
            "schema": {
              "type": "number"
            }
          }
        ]
      }
    },
    "/assets/location/{serialNumber}": {
      "get": {
        "operationId": "AssetController.getLocationBySerialNumber",
        "parameters": [
          {
            "in": "query",
            "name": "viewerPosLat",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "viewerPosLng",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "width",
            "required": false,
            "default": 1024,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "height",
            "required": false,
            "default": 768,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get location by serial number",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/device-uid/{uid}": {
      "put": {
        "operationId": "AssetController.updateByUid",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetInput"
              }
            }
          },
          "description": "AssetInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update by uid",
        "tags": [
          "Asset"
        ]
      },
      "delete": {
        "operationId": "AssetController.deleteByUid",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete by uid",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/update-stats-single/{assetId}": {
      "put": {
        "operationId": "AssetController.updateStatsSingle",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update stats single",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/update-asset-id": {
      "put": {
        "operationId": "AssetController.updateAssetIdByCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIdUpdateInput"
              }
            }
          },
          "description": "AssetIdUpdateInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update asset id by category",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/": {
      "delete": {
        "operationId": "AssetController.deleteMulti",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete multi",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/export/stats/csv/": {
      "get": {
        "operationId": "AssetController.export",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Export",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/attachment/{id}/{uniqueFileName}": {
      "get": {
        "operationId": "AssetController.getAttachment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "uniqueFileName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get attachment",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}/item/{itemId}": {
      "put": {
        "operationId": "AssetController.updateAssetItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetItemInput"
              }
            }
          },
          "description": "AssetItemInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update asset item",
        "tags": [
          "Asset"
        ]
      },
      "delete": {
        "operationId": "AssetController.removeAssetItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "itemId",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Remove asset item",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}/item": {
      "post": {
        "operationId": "AssetController.addAssetItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetItemInput"
              }
            }
          },
          "description": "AssetItemInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Add asset item",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/{id}/items": {
      "get": {
        "operationId": "AssetController.getAssetItems",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetItemInput"
              }
            }
          },
          "description": "AssetItemInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get asset items",
        "tags": [
          "Asset"
        ]
      }
    },
    "/assets/count": {
      "get": {
        "operationId": "AssetController.count",
        "parameters": [
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "deviceTypeId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "hasDevice",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Count",
        "tags": [
          "Asset"
        ]
      }
    },
    "/buildings": {
      "get": {
        "operationId": "BuildingController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Building"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Building"
        ]
      },
      "post": {
        "operationId": "BuildingController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingInput"
              }
            }
          },
          "description": "BuildingInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Building"
        ]
      }
    },
    "/buildings/{id}": {
      "get": {
        "operationId": "BuildingController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Building"
        ]
      },
      "put": {
        "operationId": "BuildingController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingInput"
              }
            }
          },
          "description": "BuildingInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Building"
        ]
      },
      "delete": {
        "operationId": "BuildingController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Building"
        ]
      }
    },
    "/constants/": {
      "get": {
        "operationId": "ConstantsController.get",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get",
        "tags": [
          "Constants"
        ]
      }
    },
    "/devices": {
      "get": {
        "operationId": "DevicesController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/Device"
                      },
                      "type": "array"
                    },
                    {
                      "$ref": "#/components/schemas/PaginationWrapper"
                    }
                  ]
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Devices"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "take",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "paginatedResponse",
            "required": false,
            "schema": {
              "type": "string"
            },
            "enum": [
              "yes",
              "no"
            ],
            "default": "no"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "typeId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "properties",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "operationId": "DevicesController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceInput"
              }
            }
          },
          "description": "DeviceInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/last-updates": {
      "get": {
        "operationId": "DevicesController.positionTimestamps",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Position timestamps",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/": {
      "delete": {
        "operationId": "DevicesController.deleteMulti",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete multi",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/free-locators": {
      "get": {
        "operationId": "DevicesController.freeLocators",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Free locators",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/free-locators/{id}": {
      "get": {
        "operationId": "DevicesController.isFreeLocators",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Is free locators",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/{id}": {
      "get": {
        "operationId": "DevicesController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Devices"
        ]
      },
      "put": {
        "operationId": "DevicesController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "description": "Device",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Devices"
        ]
      },
      "patch": {
        "operationId": "DevicesController.patch",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "description": "Device",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Patch",
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "operationId": "DevicesController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/locators/current-zone/{uid}": {
      "get": {
        "operationId": "DevicesController.currentZone",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Current zone",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/uids/{deviceTypeId}": {
      "get": {
        "operationId": "DevicesController.getUids",
        "parameters": [
          {
            "in": "path",
            "name": "deviceTypeId",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get uids",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/type/{id}": {
      "get": {
        "operationId": "DevicesController.findByType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find by type",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/uid/{uid}": {
      "patch": {
        "operationId": "DevicesController.patchUID",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "description": "Device",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Patch uid",
        "tags": [
          "Devices"
        ]
      },
      "delete": {
        "operationId": "DevicesController.deleteUid",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete uid",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/gps-position": {
      "post": {
        "operationId": "DevicesController.publishGpsPosition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "GPS Position Input",
                "examples": [
                  {
                    "floorId": 1,
                    "Vendor": "Inpixon",
                    "DeviceId": "0903535",
                    "MsgId": 4455,
                    "FwRel": "D30101",
                    "MsgType": 6,
                    "EntryTimeUtc": 1620806280,
                    "Accelerometer": {
                      "Moved": false
                    },
                    "Location": {
                      "Accuracy": 1,
                      "Altitude": 211.7,
                      "Azimuth": 0,
                      "Latitude": 38.45896571300021,
                      "Longitude": 27.189273198281303
                    },
                    "Cellular": {
                      "SignalStrength": 5
                    },
                    "ExternalTemperature": {
                      "Celsius": 34
                    },
                    "Temperature": {
                      "Celsius": 19
                    },
                    "Battery": {
                      "Percentage": 49
                    },
                    "ExternalHumidity": {
                      "Relative": 12
                    },
                    "Humidity": {
                      "Relative": 3
                    },
                    "Pressure": {
                      "Atmospheric": 48
                    }
                  }
                ],
                "required": [
                  "DeviceId",
                  "Location"
                ],
                "properties": {
                  "DeviceId": {
                    "type": "string",
                    "title": "The DeviceId schema",
                    "description": "Device Id",
                    "examples": [
                      "123e456b7a8"
                    ]
                  },
                  "Vendor": {
                    "type": "string",
                    "title": "The Vendor schema",
                    "examples": [
                      "Inpixon"
                    ]
                  },
                  "MsgId": {
                    "type": "integer",
                    "title": "The MsgId schema",
                    "examples": [
                      4455
                    ]
                  },
                  "FwRel": {
                    "type": "string",
                    "title": "The FwRel schema",
                    "examples": [
                      "D30101"
                    ]
                  },
                  "MsgType": {
                    "type": "integer",
                    "title": "The MsgType schema",
                    "examples": [
                      6
                    ]
                  },
                  "EntryTimeUtc": {
                    "type": "integer",
                    "title": "The EntryTimeUtc schema",
                    "examples": [
                      1620806280
                    ]
                  },
                  "Accelerometer": {
                    "type": "object",
                    "title": "The Accelerometer schema",
                    "examples": [
                      {
                        "Moved": false
                      }
                    ],
                    "required": [
                      "Moved"
                    ],
                    "properties": {
                      "Moved": {
                        "type": "boolean",
                        "title": "The Moved schema",
                        "examples": [
                          false
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Location": {
                    "type": "object",
                    "title": "The Location schema",
                    "description": "Device Location",
                    "examples": [
                      {
                        "Accuracy": 1,
                        "Altitude": 211.7,
                        "Azimuth": 0,
                        "Latitude": 38.45896571300021,
                        "Longitude": 27.189273198281303
                      }
                    ],
                    "required": [
                      "Latitude",
                      "Longitude"
                    ],
                    "properties": {
                      "Accuracy": {
                        "type": "integer",
                        "title": "The Accuracy schema",
                        "examples": [
                          1
                        ]
                      },
                      "Altitude": {
                        "type": "number",
                        "title": "The Altitude schema",
                        "default": 0,
                        "examples": [
                          211.7
                        ]
                      },
                      "Azimuth": {
                        "type": "integer",
                        "title": "The Azimuth schema",
                        "default": 0,
                        "examples": [
                          0
                        ]
                      },
                      "Latitude": {
                        "type": "number",
                        "title": "The Latitude schema",
                        "examples": [
                          38.45896571300021
                        ]
                      },
                      "Longitude": {
                        "type": "number",
                        "title": "The Longitude schema",
                        "examples": [
                          27.189273198281303
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Cellular": {
                    "type": "object",
                    "title": "The Cellular schema",
                    "examples": [
                      {
                        "SignalStrength": 5
                      }
                    ],
                    "required": [
                      "SignalStrength"
                    ],
                    "properties": {
                      "SignalStrength": {
                        "type": "integer",
                        "title": "The SignalStrength schema",
                        "examples": [
                          5
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "ExternalTemperature": {
                    "type": "object",
                    "title": "The ExternalTemperature schema",
                    "default": {},
                    "examples": [
                      {
                        "Celsius": 34
                      }
                    ],
                    "required": [
                      "Celsius"
                    ],
                    "properties": {
                      "Celsius": {
                        "type": "integer",
                        "title": "The Celsius schema",
                        "default": 0,
                        "examples": [
                          34
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Temperature": {
                    "type": "object",
                    "title": "The Temperature schema",
                    "examples": [
                      {
                        "Celsius": 19
                      }
                    ],
                    "required": [
                      "Celsius"
                    ],
                    "properties": {
                      "Celsius": {
                        "type": "integer",
                        "title": "The Celsius schema",
                        "examples": [
                          19
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Battery": {
                    "type": "object",
                    "title": "The Battery schema",
                    "examples": [
                      {
                        "Percentage": 49
                      }
                    ],
                    "required": [
                      "Percentage"
                    ],
                    "properties": {
                      "Percentage": {
                        "type": "integer",
                        "title": "The Percentage schema",
                        "examples": [
                          49
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "ExternalHumidity": {
                    "type": "object",
                    "title": "The ExternalHumidity schema",
                    "examples": [
                      {
                        "Relative": 12
                      }
                    ],
                    "required": [
                      "Relative"
                    ],
                    "properties": {
                      "Relative": {
                        "type": "integer",
                        "title": "The Relative schema",
                        "examples": [
                          12
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Humidity": {
                    "type": "object",
                    "title": "The Humidity schema",
                    "examples": [
                      {
                        "Relative": 3
                      }
                    ],
                    "required": [
                      "Relative"
                    ],
                    "properties": {
                      "Relative": {
                        "type": "integer",
                        "title": "The Relative schema",
                        "examples": [
                          3
                        ]
                      }
                    },
                    "additionalProperties": true
                  },
                  "Pressure": {
                    "type": "object",
                    "title": "The Pressure schema",
                    "examples": [
                      {
                        "Atmospheric": 48
                      }
                    ],
                    "required": [
                      "Atmospheric"
                    ],
                    "properties": {
                      "Atmospheric": {
                        "type": "integer",
                        "title": "The Atmospheric schema",
                        "examples": [
                          48
                        ]
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "description": "Gps Position Input",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Publish gps position",
        "tags": [
          "Devices"
        ]
      }
    },
    "/devices/update-stats": {
      "put": {
        "operationId": "DevicesController.updateStats",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update stats",
        "tags": [
          "Devices"
        ]
      }
    },
    "/device-families": {
      "get": {
        "operationId": "DeviceFamilyController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Device Family"
        ]
      }
    },
    "/device-families/{id}": {
      "get": {
        "operationId": "DeviceFamilyController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Device Family"
        ]
      }
    },
    "/device-types": {
      "get": {
        "operationId": "DeviceTypeController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceType"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Device Type"
        ]
      }
    },
    "/device-types/count": {
      "get": {
        "operationId": "DeviceTypeController.count",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Count",
        "tags": [
          "Device Type"
        ]
      }
    },
    "/device-types/{name}": {
      "get": {
        "operationId": "DeviceTypeController.one",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceType"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Device Type"
        ]
      }
    },
    "/dynamic-zones": {
      "get": {
        "operationId": "DynamicZoneController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DynamicZone"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Dynamic Zone"
        ]
      },
      "post": {
        "operationId": "DynamicZoneController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicZoneInput"
              }
            }
          },
          "description": "DynamicZoneInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicZone"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Dynamic Zone"
        ]
      }
    },
    "/dynamic-zones/ids": {
      "get": {
        "operationId": "DynamicZoneController.getIds",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get ids",
        "tags": [
          "Dynamic Zone"
        ]
      }
    },
    "/dynamic-zones/{id}": {
      "get": {
        "operationId": "DynamicZoneController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicZone"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Dynamic Zone"
        ]
      },
      "put": {
        "operationId": "DynamicZoneController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicZoneInput"
              }
            }
          },
          "description": "DynamicZoneInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicZone"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Dynamic Zone"
        ]
      },
      "delete": {
        "operationId": "DynamicZoneController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Dynamic Zone"
        ]
      }
    },
    "/events": {
      "get": {
        "operationId": "EventController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "take",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromTs",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Unix Timestamp"
            }
          },
          {
            "in": "query",
            "name": "toTs",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Unix Timestamp"
            }
          },
          {
            "in": "query",
            "name": "assetId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ]
      },
      "post": {
        "operationId": "EventController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "description": "Event",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/{id}": {
      "get": {
        "operationId": "EventController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Event"
        ]
      },
      "delete": {
        "operationId": "EventController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/export/csv": {
      "get": {
        "operationId": "EventController.export",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Export",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "source",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromTs",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Unix Timestamp"
            }
          },
          {
            "in": "query",
            "name": "toTs",
            "required": false,
            "schema": {
              "type": "number",
              "description": "Unix Timestamp"
            }
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/events/delete/all": {
      "delete": {
        "operationId": "EventController.deleteAll",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete all",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/resolve-event/{id}": {
      "put": {
        "operationId": "EventController.resolveEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Resolve event",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/close-event/{id}": {
      "put": {
        "operationId": "EventController.closeEvent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Close event",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/remove-event-status/{id}": {
      "put": {
        "operationId": "EventController.removeEventStaus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Remove event staus",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/last-open-device/{deviceId}": {
      "get": {
        "operationId": "EventController.deviceLastOpen",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Device last open",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/last-open-device": {
      "get": {
        "operationId": "EventController.devicesLastOpen",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Devices last open",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/last-devices-with-status": {
      "get": {
        "operationId": "EventController.devicesLast",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Devices last",
        "tags": [
          "Event"
        ]
      }
    },
    "/floors": {
      "get": {
        "operationId": "FloorController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Floor"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Floor"
        ]
      },
      "post": {
        "operationId": "FloorController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FloorInput"
              }
            }
          },
          "description": "FloorInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Floor"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Floor"
        ]
      }
    },
    "/floors/ids": {
      "get": {
        "operationId": "FloorController.getIds",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get ids",
        "tags": [
          "Floor"
        ]
      }
    },
    "/floors/{id}": {
      "get": {
        "operationId": "FloorController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Floor"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Floor"
        ]
      },
      "put": {
        "operationId": "FloorController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FloorInput"
              }
            }
          },
          "description": "FloorInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Floor"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Floor"
        ]
      },
      "delete": {
        "operationId": "FloorController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Floor"
        ]
      }
    },
    "/floors/{id}/zone-states": {
      "get": {
        "operationId": "FloorController.zoneStates",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "assets",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "5": [
                      1,
                      3
                    ]
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Zone states",
        "tags": [
          "Floor"
        ]
      }
    },
    "/reverse-geocode/nearest-city/{lat}/{long}": {
      "get": {
        "operationId": "GeocodingController.nearestCity",
        "parameters": [
          {
            "in": "path",
            "name": "lat",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "long",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    [
                      {
                        "lat": "50.11552",
                        "long": "8.68417",
                        "country": "Germany",
                        "name": "Frankfurt am Main",
                        "srch": "Frankfurt am Main,Germany"
                      },
                      0.00004785929999996971
                    ]
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Nearest city",
        "tags": [
          "Geocoding"
        ]
      }
    },
    "/reverse-geocode/city-search/{term}": {
      "get": {
        "operationId": "GeocodingController.cityNames",
        "parameters": [
          {
            "in": "path",
            "name": "term",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "lat": "50.11552",
                      "long": "8.68417",
                      "country": "Germany",
                      "name": "Frankfurt am Main",
                      "srch": "Frankfurt am Main,Germany"
                    }
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "City names",
        "tags": [
          "Geocoding"
        ]
      }
    },
    "/positions": {
      "get": {
        "operationId": "PositionController.find",
        "parameters": [
          {
            "in": "query",
            "name": "floorId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "asset",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "floorId": 2,
                      "id": "05a260c907c40723",
                      "pos": {
                        "x": 31.494589500694875,
                        "y": 26.475145240812274,
                        "z": 0
                      },
                      "time": 1592490816604,
                      "tag_data": {
                        "ax": 0,
                        "ay": 0,
                        "az": 0,
                        "bat": 2572,
                        "fw_ver": 2,
                        "hw_ver": 1,
                        "pressure": 10163401,
                        "state": 2,
                        "temp": 2475
                      },
                      "asset": {
                        "id": 12,
                        "assetId": null,
                        "categoryId": 2,
                        "category": {
                          "createdAt": "2020-03-13T14:41:43.241Z",
                          "updatedAt": "2020-05-18T11:17:02.044Z",
                          "id": 2,
                          "name": "PERSON",
                          "description": "",
                          "color": "#311b92",
                          "width": null,
                          "height": null,
                          "offsetX": null,
                          "offsetY": null,
                          "radius": null,
                          "circular": false,
                          "propertyNames": []
                        },
                        "name": "P014"
                      }
                    }
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Position"
        ]
      }
    },
    "/positions/clean": {
      "get": {
        "operationId": "PositionController.clean",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Clean",
        "tags": [
          "Position"
        ]
      }
    },
    "/positions/{uid}": {
      "get": {
        "operationId": "PositionController.one",
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "floorId": 2,
                    "id": "05a260c907c4061f",
                    "pos": {
                      "x": 9.19522661887272,
                      "y": 20.70036523862168,
                      "z": 0
                    },
                    "time": 1592837473420,
                    "tag_data": {
                      "ax": 0,
                      "ay": 0,
                      "az": 0,
                      "bat": 2572,
                      "fw_ver": 2,
                      "hw_ver": 1,
                      "pressure": 10163401,
                      "state": 2,
                      "temp": 2475
                    }
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Position"
        ]
      }
    },
    "/profiles": {
      "get": {
        "operationId": "ProfileController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Profile"
        ]
      },
      "post": {
        "operationId": "ProfileController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileInput"
              }
            }
          },
          "description": "ProfileInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Profile"
        ]
      }
    },
    "/profiles/{id}": {
      "get": {
        "operationId": "ProfileController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Profile"
        ]
      },
      "put": {
        "operationId": "ProfileController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileInput"
              }
            }
          },
          "description": "ProfileInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Profile"
        ]
      },
      "delete": {
        "operationId": "ProfileController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Profile"
        ]
      }
    },
    "/rights": {
      "get": {
        "operationId": "RightController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Right"
        ]
      }
    },
    "/rights/{id}": {
      "get": {
        "operationId": "RightController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Right"
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "RoleController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Role"
        ]
      },
      "post": {
        "operationId": "RoleController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          },
          "description": "RoleInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Role"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "RoleController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Role"
        ]
      },
      "put": {
        "operationId": "RoleController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleInput"
              }
            }
          },
          "description": "RoleInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Role"
        ]
      },
      "delete": {
        "operationId": "RoleController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Role"
        ]
      }
    },
    "/sites": {
      "get": {
        "operationId": "SiteController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Site"
        ]
      },
      "post": {
        "operationId": "SiteController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteInput"
              }
            }
          },
          "description": "SiteInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Site"
        ]
      }
    },
    "/sites/{id}": {
      "get": {
        "operationId": "SiteController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Site"
        ]
      },
      "put": {
        "operationId": "SiteController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteInput"
              }
            }
          },
          "description": "SiteInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Site"
        ]
      },
      "delete": {
        "operationId": "SiteController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Site"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UserController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "User"
        ]
      },
      "post": {
        "operationId": "UserController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          },
          "description": "UserInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "User"
        ]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UserController.findMe",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find me",
        "tags": [
          "User"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "User"
        ]
      },
      "put": {
        "operationId": "UserController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          },
          "description": "UserInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "User"
        ]
      }
    },
    "/users/export/stats/csv/": {
      "get": {
        "operationId": "UserController.export",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Export",
        "tags": [
          "User"
        ]
      }
    },
    "/zone-categories": {
      "get": {
        "operationId": "ZoneCategoryController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ZoneCategory"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Zone Category"
        ]
      },
      "post": {
        "operationId": "ZoneCategoryController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneCategoryInput"
              }
            }
          },
          "description": "ZoneCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Zone Category"
        ]
      }
    },
    "/zone-categories/{id}": {
      "get": {
        "operationId": "ZoneCategoryController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Zone Category"
        ]
      },
      "put": {
        "operationId": "ZoneCategoryController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneCategoryInput"
              }
            }
          },
          "description": "ZoneCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Zone Category"
        ]
      },
      "delete": {
        "operationId": "ZoneCategoryController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Zone Category"
        ]
      }
    },
    "/zones": {
      "get": {
        "operationId": "ZoneController.find",
        "parameters": [
          {
            "in": "query",
            "name": "floorId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "internal",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "obstacle",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "beaconZone",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "searchTerm",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Zone"
        ]
      },
      "post": {
        "operationId": "ZoneController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneInput"
              }
            }
          },
          "description": "ZoneInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/{id}": {
      "get": {
        "operationId": "ZoneController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Zone"
        ]
      },
      "put": {
        "operationId": "ZoneController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneInput"
              }
            }
          },
          "description": "ZoneInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Zone"
        ]
      },
      "delete": {
        "operationId": "ZoneController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/{id}/state-asset": {
      "get": {
        "operationId": "ZoneController.stateAsset",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    243,
                    244
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "State asset",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/{id}/state-tag": {
      "get": {
        "operationId": "ZoneController.stateTag",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "[0-9]+",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    "05a260c907c41d28",
                    "05a260c947c41c2a"
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "State tag",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/label/{label}": {
      "get": {
        "operationId": "ZoneController.oneByLabel",
        "parameters": [
          {
            "in": "path",
            "name": "label",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One by label",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/label/{label}/state-asset": {
      "get": {
        "operationId": "ZoneController.stateAssetByLabel",
        "parameters": [
          {
            "in": "path",
            "name": "label",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "1"
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "State asset by label",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/label/{label}/state-tag": {
      "get": {
        "operationId": "ZoneController.stateTagByLabel",
        "parameters": [
          {
            "in": "path",
            "name": "label",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "05a260c907c4061f"
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "State tag by label",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zone-profiles": {
      "get": {
        "operationId": "ZoneProfileController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ZoneProfile"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Zone Profile"
        ]
      },
      "post": {
        "operationId": "ZoneProfileController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneProfileInput"
              }
            }
          },
          "description": "ZoneProfileInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Zone Profile"
        ]
      }
    },
    "/zone-profiles/{id}": {
      "get": {
        "operationId": "ZoneProfileController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Zone Profile"
        ]
      },
      "put": {
        "operationId": "ZoneProfileController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneProfileInput"
              }
            }
          },
          "description": "ZoneProfileInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneProfile"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Zone Profile"
        ]
      },
      "delete": {
        "operationId": "ZoneProfileController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Zone Profile"
        ]
      }
    },
    "/device-apps": {
      "get": {
        "operationId": "DeviceAppController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Device App"
        ]
      }
    },
    "/device-apps/{id}": {
      "get": {
        "operationId": "DeviceAppController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Device App"
        ]
      },
      "put": {
        "operationId": "DeviceAppController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceAppInput"
              }
            }
          },
          "description": "DeviceAppInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceApp"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Device App"
        ]
      }
    },
    "/device-apps/appId/{id}": {
      "get": {
        "operationId": "DeviceAppController.findByAppId",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find by app id",
        "tags": [
          "Device App"
        ]
      }
    },
    "/kafka/topics": {
      "get": {
        "operationId": "KafkaController.getKafkaTopics",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "example": [
                    {
                      "name": "asset_9_zone_2",
                      "partitions": [
                        {
                          "id": 0,
                          "replicas": [
                            {
                              "id": 1
                            }
                          ],
                          "size": 1388,
                          "firstOffset": 0,
                          "leader": {
                            "id": 1
                          },
                          "preferredLeader": {
                            "id": 1
                          },
                          "underReplicated": false,
                          "leaderPreferred": true,
                          "inSyncReplicas": [
                            {
                              "id": 1
                            }
                          ],
                          "offlineReplicas": []
                        }
                      ],
                      "config": {
                        "retention.bytes": "400000000",
                        "retention.ms": "-1",
                        "segment.bytes": "40000000"
                      },
                      "preferredReplicaPercent": 1,
                      "underReplicatedPartitions": [],
                      "totalSize": 1388,
                      "availableSize": 1388
                    }
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get kafka topics",
        "tags": [
          "Kafka"
        ]
      }
    },
    "/kafka/topics/{topicName}": {
      "get": {
        "operationId": "KafkaController.getOneTopic",
        "parameters": [
          {
            "in": "path",
            "name": "topicName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "asset_9_zone_2",
                    "partitions": [
                      {
                        "id": 0,
                        "replicas": [
                          {
                            "id": 1
                          }
                        ],
                        "size": 1388,
                        "firstOffset": 0,
                        "leader": {
                          "id": 1
                        },
                        "preferredLeader": {
                          "id": 1
                        },
                        "underReplicated": false,
                        "leaderPreferred": true,
                        "inSyncReplicas": [
                          {
                            "id": 1
                          }
                        ],
                        "offlineReplicas": []
                      }
                    ],
                    "config": {
                      "retention.bytes": "400000000",
                      "retention.ms": "-1",
                      "segment.bytes": "40000000"
                    },
                    "preferredReplicaPercent": 1,
                    "underReplicatedPartitions": [],
                    "totalSize": 1388,
                    "availableSize": 1388
                  }
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get one topic",
        "tags": [
          "Kafka"
        ]
      }
    },
    "/kafka/topics/{topicName}/messages": {
      "get": {
        "operationId": "KafkaController.getTopicMessages",
        "parameters": [
          {
            "in": "path",
            "name": "topicName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": [
                    {
                      "partition": 0,
                      "offset": 0,
                      "message": "{\"zoneId\": 5, \"zoneCategoryId\": 1, \"label\": \"Section B\", \"uid\": \"cd6041c914a5ccb3\", \"typeId\": 1, \"event\": \"enter\", \"floorId\": 2, \"time\": 1709535053173, \"asset\": {\"id\": 9, \"assetId\": null, \"categoryId\": 10, \"name\": \"UWB2\", \"deviceName\": \"cd6041c914a5ccb3\", \"properties\": null}, \"position\": {\"x\": 6789.0, \"y\": 4674.0}, \"loaded\": false, \"whitelisted\": true, \"blacklisted\": false, \"zoneProfileProps\": [], \"suppressAlert\": false}",
                      "key": "empty",
                      "headers": {},
                      "timestamp": "2024-03-04T06:50:53.173+00:00",
                      "headersFormatted": "empty"
                    }
                  ]
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Get topic messages",
        "tags": [
          "Kafka"
        ]
      }
    },
    "/teams": {
      "get": {
        "operationId": "TeamController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Team"
        ]
      },
      "post": {
        "operationId": "TeamController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamInput"
              }
            }
          },
          "description": "TeamInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Team"
        ]
      }
    },
    "/teams/{id}": {
      "get": {
        "operationId": "TeamController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Team"
        ]
      },
      "put": {
        "operationId": "TeamController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamInput"
              }
            }
          },
          "description": "TeamInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Team"
        ]
      },
      "delete": {
        "operationId": "TeamController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Team"
        ]
      }
    },
    "/scanner-app-settings": {
      "get": {
        "operationId": "ScannerAppSettingsController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Scanner App Settings"
        ]
      },
      "put": {
        "operationId": "ScannerAppSettingsController.update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScannerAppSettingsInput"
              }
            }
          },
          "description": "ScannerAppSettingsInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Scanner App Settings"
        ]
      }
    },
    "/event-delete-settings": {
      "get": {
        "operationId": "EventDeleteSettingsController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventDeleteSettings"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Event Delete Settings"
        ]
      },
      "post": {
        "operationId": "EventDeleteSettingsController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDeleteSettingsInput"
              }
            }
          },
          "description": "EventDeleteSettingsInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDeleteSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Event Delete Settings"
        ]
      }
    },
    "/event-delete-settings/{id}": {
      "get": {
        "operationId": "EventDeleteSettingsController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDeleteSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Event Delete Settings"
        ]
      },
      "put": {
        "operationId": "EventDeleteSettingsController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDeleteSettingsInput"
              }
            }
          },
          "description": "EventDeleteSettingsInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDeleteSettings"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Event Delete Settings"
        ]
      },
      "delete": {
        "operationId": "EventDeleteSettingsController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Event Delete Settings"
        ]
      }
    },
    "/marker-categories": {
      "get": {
        "operationId": "MarkerCategoryController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MarkerCategory"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Marker Category"
        ]
      },
      "post": {
        "operationId": "MarkerCategoryController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkerCategoryInput"
              }
            }
          },
          "description": "MarkerCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkerCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Marker Category"
        ]
      }
    },
    "/marker-categories/{id}": {
      "get": {
        "operationId": "MarkerCategoryController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkerCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Marker Category"
        ]
      },
      "put": {
        "operationId": "MarkerCategoryController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkerCategoryInput"
              }
            }
          },
          "description": "MarkerCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkerCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Marker Category"
        ]
      },
      "delete": {
        "operationId": "MarkerCategoryController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Marker Category"
        ]
      }
    },
    "/markers": {
      "get": {
        "operationId": "MarkerController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Marker"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Marker"
        ]
      },
      "post": {
        "operationId": "MarkerController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkerInput"
              }
            }
          },
          "description": "MarkerInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Marker"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Marker"
        ]
      }
    },
    "/markers/{id}": {
      "get": {
        "operationId": "MarkerController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Marker"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Marker"
        ]
      },
      "put": {
        "operationId": "MarkerController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkerInput"
              }
            }
          },
          "description": "MarkerInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Marker"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Marker"
        ]
      },
      "delete": {
        "operationId": "MarkerController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Marker"
        ]
      }
    },
    "/boards": {
      "get": {
        "operationId": "BoardController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Board"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Board"
        ]
      },
      "post": {
        "operationId": "BoardController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardInput"
              }
            }
          },
          "description": "BoardInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Board"
        ]
      }
    },
    "/boards/{id}": {
      "get": {
        "operationId": "BoardController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Board"
        ]
      },
      "put": {
        "operationId": "BoardController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardInput"
              }
            }
          },
          "description": "BoardInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Board"
        ]
      },
      "delete": {
        "operationId": "BoardController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Board"
        ]
      }
    },
    "/steps": {
      "get": {
        "operationId": "StepController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Step"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Step"
        ]
      },
      "post": {
        "operationId": "StepController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StepInput"
              }
            }
          },
          "description": "StepInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Step"
        ]
      }
    },
    "/steps/{id}": {
      "get": {
        "operationId": "StepController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Step"
        ]
      },
      "put": {
        "operationId": "StepController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StepInput"
              }
            }
          },
          "description": "StepInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Step"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Step"
        ]
      },
      "delete": {
        "operationId": "StepController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Step"
        ]
      }
    },
    "/cards": {
      "get": {
        "operationId": "CardController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Card"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Card"
        ]
      },
      "post": {
        "operationId": "CardController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardInput"
              }
            }
          },
          "description": "CardInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Card"
        ]
      }
    },
    "/cards/{id}": {
      "get": {
        "operationId": "CardController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Card"
        ]
      },
      "put": {
        "operationId": "CardController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardInput"
              }
            }
          },
          "description": "CardInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Card"
        ]
      },
      "delete": {
        "operationId": "CardController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Card"
        ]
      }
    },
    "/card-histories": {
      "get": {
        "operationId": "CardHistoryController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CardHistory"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Card History"
        ]
      },
      "post": {
        "operationId": "CardHistoryController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardHistoryInput"
              }
            }
          },
          "description": "CardHistoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardHistory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Card History"
        ]
      }
    },
    "/card-histories/{id}": {
      "get": {
        "operationId": "CardHistoryController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardHistory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Card History"
        ]
      },
      "put": {
        "operationId": "CardHistoryController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardHistoryInput"
              }
            }
          },
          "description": "CardHistoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardHistory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Card History"
        ]
      },
      "delete": {
        "operationId": "CardHistoryController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Card History"
        ]
      }
    },
    "/card-priorities": {
      "get": {
        "operationId": "CardPriorityController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CardPriority"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Card Priority"
        ]
      },
      "post": {
        "operationId": "CardPriorityController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardPriorityInput"
              }
            }
          },
          "description": "CardPriorityInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardPriority"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Card Priority"
        ]
      }
    },
    "/card-priorities/{id}": {
      "get": {
        "operationId": "CardPriorityController.findOne",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardPriority"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find one",
        "tags": [
          "Card Priority"
        ]
      },
      "put": {
        "operationId": "CardPriorityController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardPriorityInput"
              }
            }
          },
          "description": "CardPriorityInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardPriority"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Card Priority"
        ]
      },
      "delete": {
        "operationId": "CardPriorityController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Card Priority"
        ]
      }
    },
    "/le-filter-categories": {
      "get": {
        "operationId": "LeFilterCategoryController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LeFilterCategory"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Le Filter Category"
        ]
      },
      "post": {
        "operationId": "LeFilterCategoryController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeFilterCategoryInput"
              }
            }
          },
          "description": "LeFilterCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilterCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Le Filter Category"
        ]
      }
    },
    "/le-filter-categories/{id}": {
      "get": {
        "operationId": "LeFilterCategoryController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilterCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Le Filter Category"
        ]
      },
      "put": {
        "operationId": "LeFilterCategoryController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeFilterCategoryInput"
              }
            }
          },
          "description": "LeFilterCategoryInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilterCategory"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Le Filter Category"
        ]
      },
      "delete": {
        "operationId": "LeFilterCategoryController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Le Filter Category"
        ]
      }
    },
    "/le-filter-categories/le-config": {
      "get": {
        "operationId": "LeFilterCategoryController.leFilterConfig",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Le filter config",
        "tags": [
          "Le Filter Category"
        ]
      }
    },
    "/le-filter-categories/send-to-le": {
      "get": {
        "operationId": "LeFilterCategoryController.sendConfigToLe",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Send config to le",
        "tags": [
          "Le Filter Category"
        ]
      }
    },
    "/le-filters": {
      "get": {
        "operationId": "LeFilterController.find",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LeFilter"
                  },
                  "type": "array"
                }
              }
            },
            "description": ""
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Find",
        "tags": [
          "Le Filter"
        ]
      },
      "post": {
        "operationId": "LeFilterController.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeFilterInput"
              }
            }
          },
          "description": "LeFilterInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilter"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Create",
        "tags": [
          "Le Filter"
        ]
      }
    },
    "/le-filters/{id}": {
      "get": {
        "operationId": "LeFilterController.one",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilter"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "One",
        "tags": [
          "Le Filter"
        ]
      },
      "put": {
        "operationId": "LeFilterController.update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeFilterInput"
              }
            }
          },
          "description": "LeFilterInput",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeFilter"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Update",
        "tags": [
          "Le Filter"
        ]
      },
      "delete": {
        "operationId": "LeFilterController.delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            },
            "description": "Successful response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "SyntaxError",
                    "message": "Unexpected token } in JSON at position 58"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "AuthorizationRequiredError",
                    "message": "Authorization is required for request on {endpoint}",
                    "errors": []
                  }
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "name": "Error",
                    "message": "Object not found."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error."
          }
        },
        "summary": "Delete",
        "tags": [
          "Le Filter"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Role"
    },
    {
      "name": "Right"
    },
    {
      "name": "Device Family"
    },
    {
      "name": "Device Type"
    },
    {
      "name": "Devices"
    },
    {
      "name": "Profile"
    },
    {
      "name": "Asset Category"
    },
    {
      "name": "Asset"
    },
    {
      "name": "Dynamic Zone"
    },
    {
      "name": "Site"
    },
    {
      "name": "Building"
    },
    {
      "name": "Floor"
    },
    {
      "name": "Zone Category"
    },
    {
      "name": "Zone"
    },
    {
      "name": "Zone Profile"
    },
    {
      "name": "Position"
    },
    {
      "name": "Geocoding"
    },
    {
      "name": "Alert Type"
    },
    {
      "name": "Event"
    },
    {
      "name": "Constants"
    }
  ]
}